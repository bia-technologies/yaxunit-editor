export enum BslTokenTypes {
    access = 'access',
    add_handler_statement = 'add_handler_statement',
    arguments = 'arguments',
    assignment_statement = 'assignment_statement',
    await_expression = 'await_expression',
    await_statement = 'await_statement',
    binary_expression = 'binary_expression',
    boolean = 'boolean',
    break_statement = 'break_statement',
    call_expression = 'call_expression',
    call_statement = 'call_statement',
    const_expression = 'const_expression',
    continue_statement = 'continue_statement',
    else_clause = 'else_clause',
    elseif_clause = 'elseif_clause',
    execute_statement = 'execute_statement',
    expression = 'expression',
    for_each_statement = 'for_each_statement',
    for_statement = 'for_statement',
    function_definition = 'function_definition',
    goto_statement = 'goto_statement',
    if_statement = 'if_statement',
    index = 'index',
    label_statement = 'label_statement',
    line_comment = 'line_comment',
    method_call = 'method_call',
    new_expression = 'new_expression',
    new_expression_method = 'new_expression_method',
    parameter = 'parameter',
    parameters = 'parameters',
    preprocessor = 'preprocessor',
    procedure_definition = 'procedure_definition',
    property_access = 'property_access',
    remove_handler_statement = 'remove_handler_statement',
    return_statement = 'return_statement',
    rise_error_statement = 'rise_error_statement',
    source_file = 'source_file',
    string = 'string',
    ternary_expression = 'ternary_expression',
    try_statement = 'try_statement',
    unary_expression = 'unary_expression',
    var_definition = 'var_definition',
    var_statement = 'var_statement',
    while_statement = 'while_statement',
    addhandler_keyword = 'ADDHANDLER_KEYWORD',
    async_keyword = 'ASYNC_KEYWORD',
    await_keyword = 'AWAIT_KEYWORD',
    break_keyword = 'BREAK_KEYWORD',
    continue_keyword = 'CONTINUE_KEYWORD',
    do_keyword = 'DO_KEYWORD',
    each_keyword = 'EACH_KEYWORD',
    else_keyword = 'ELSE_KEYWORD',
    elsif_keyword = 'ELSIF_KEYWORD',
    enddo_keyword = 'ENDDO_KEYWORD',
    endfunction_keyword = 'ENDFUNCTION_KEYWORD',
    endif_keyword = 'ENDIF_KEYWORD',
    endprocedure_keyword = 'ENDPROCEDURE_KEYWORD',
    endtry_keyword = 'ENDTRY_KEYWORD',
    except_keyword = 'EXCEPT_KEYWORD',
    export_keyword = 'EXPORT_KEYWORD',
    false_keyword = 'FALSE_KEYWORD',
    for_keyword = 'FOR_KEYWORD',
    function_keyword = 'FUNCTION_KEYWORD',
    goto_keyword = 'GOTO_KEYWORD',
    if_keyword = 'IF_KEYWORD',
    in_keyword = 'IN_KEYWORD',
    new_keyword = 'NEW_KEYWORD',
    null_keyword = 'NULL_KEYWORD',
    preproc_else_keyword = 'PREPROC_ELSE_KEYWORD',
    preproc_elsif_keyword = 'PREPROC_ELSIF_KEYWORD',
    preproc_endif_keyword = 'PREPROC_ENDIF_KEYWORD',
    preproc_endregion_keyword = 'PREPROC_ENDREGION_KEYWORD',
    preproc_if_keyword = 'PREPROC_IF_KEYWORD',
    preproc_region_keyword = 'PREPROC_REGION_KEYWORD',
    procedure_keyword = 'PROCEDURE_KEYWORD',
    raise_keyword = 'RAISE_KEYWORD',
    removehandler_keyword = 'REMOVEHANDLER_KEYWORD',
    return_keyword = 'RETURN_KEYWORD',
    then_keyword = 'THEN_KEYWORD',
    to_keyword = 'TO_KEYWORD',
    true_keyword = 'TRUE_KEYWORD',
    try_keyword = 'TRY_KEYWORD',
    undefined_keyword = 'UNDEFINED_KEYWORD',
    val_keyword = 'VAL_KEYWORD',
    var_keyword = 'VAR_KEYWORD',
    while_keyword = 'WHILE_KEYWORD',
    annotation = 'annotation',
    date = 'date',
    identifier = 'identifier',
    number = 'number',
    operator = 'operator',
    preproc = 'preproc',
    property = 'property',
    string_content = 'string_content',

    ERROR = 'ERROR'
}